// DO NOT EDIT. This file is generated by deco.
// This file SHOULD be checked into source version control.
// This file is automatically updated during development when running `dev.ts`.

import config from "./deno.json" assert { type: "json" };
import { DecoManifest } from "$live/types.ts";
import * as $0 from "./routes/[...catchall].tsx";
import * as $1 from "./routes/index.tsx";
import * as $2 from "./routes/loader.tsx";
import * as $3 from "./routes/start.tsx";
import * as $$0 from "./islands/Editor.tsx";
import * as $$1 from "./islands/InspectVSCode.tsx";
import * as $$$0 from "./components/FreshHead.tsx";
import * as $$$1 from "./components/GetStarted.tsx";
import * as $$$2 from "./components/Head.tsx";
import * as $$$3 from "./components/JsonPlaceholder.tsx";
import * as $$$4 from "./components/Layout.tsx";
import * as $$$$0 from "./loaders/jsonPlaceholder.ts";

const manifest: DecoManifest = {
  routes: {
    "./routes/[...catchall].tsx": $0,
    "./routes/index.tsx": $1,
    "./routes/loader.tsx": $2,
    "./routes/start.tsx": $3,
  },
  islands: { "./islands/Editor.tsx": $$0, "./islands/InspectVSCode.tsx": $$1 },
  components: {
    "./components/FreshHead.tsx": $$$0,
    "./components/GetStarted.tsx": $$$1,
    "./components/Head.tsx": $$$2,
    "./components/JsonPlaceholder.tsx": $$$3,
    "./components/Layout.tsx": $$$4,
  },
  loaders: { "./loaders/jsonPlaceholder.ts": $$$$0 },
  schemas: {
    "GetStarted": {
      "title": "Get Started",
      "type": "object",
      "properties": {
        "enableInspectVSCode": {
          "title": "Enable InspectVSCode",
          "type": "boolean",
          "default": false,
        },
      },
    },
    "Head": {
      "title": "SEO",
      "type": "object",
      "required": ["url", "themeColor"],
      "properties": {
        "title": { "title": "Title", "type": "string" },
        "description": { "title": "Description", "type": "string" },
        "url": { "title": "URL", "type": "string", "format": "uri" },
        "imageUrl": { "title": "Image URL", "type": "string", "format": "uri" },
        "themeColor": {
          "title": "Theme color",
          "type": "string",
          "pattern": "#[a-zA-Z0-9]{3,8}",
        },
        "twitter": {
          "title": "twitter",
          "type": "object",
          "properties": {
            "cardType": { "title": "Twitter Card type", "type": "string" },
          },
        },
      },
    },
    "JsonPlaceholder": {
      "title": "JsonPlaceholder",
      "type": "object",
      "properties": { "data": { "$ref": "jsonplaceholder" } },
    },
  },
  baseUrl: import.meta.url,
  config,
};

export default manifest;
